#!/bin/bash
set -euo pipefail

DISK_MIN_AVAILABLE=${DISK_MIN_AVAILABLE:-1048576} # 1GB
DISK_MIN_INODES=${DISK_MIN_INODES:-10000}

mark_instance_unhealthy() {
  aws autoscaling set-instance-health \
    --instance-id "$(curl http://169.254.169.254/latest/meta-data/instance-id)" \
    --health-status Unhealthy
}

check_disk_healthy() {
  disk_avail=$(df -k --output=avail "$PWD" | tail -n1)
  echo "Disk space free: $disk_avail"

  if [[ $disk_avail -lt $DISK_MIN_AVAILABLE ]]; then
    echo "Not enough disk space free"
    return 1
  fi

  inodes_avail=$(df -k --output=iavail "$PWD" | tail -n1)
  echo "Inodes free: $inodes_avail"

  if [[ $inodes_avail -lt $DISK_MIN_INODES ]]; then
    echo "Not enough inodes free"
    return 1
  fi
}

trap mark_instance_unhealthy ERR

if ! check_disk_healthy ; then
  echo "~~~ Cleaning up docker resources"
  docker system prune -a -f

  if ! check_disk_healthy ; then
    echo "Disk health checks failed"
    exit 1
  fi
fi
