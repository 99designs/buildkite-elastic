#!/bin/bash

set -eu -o pipefail

# AWS ECR login support

# For logging into the current AWS account’s registry
if [[ "${AWS_ECR_LOGIN:-true}" =~ ^(true|1)$ ]] ; then
  echo "~~~ Authenticating with AWS ECR"
  eval "$(aws ecr get-login)"
fi

# For logging into other AWS account’s registries
if [[ -n "${AWS_ECR_LOGIN_REGISTRY_IDS:-}" ]] ; then
  echo "~~~ Authenticating with AWS ECR"
  eval "$(aws ecr get-login --registry-ids "${AWS_ECR_LOGIN_REGISTRY_IDS}")"
fi

# DOCKER_HUB_* legacy config var support
if [[ -n "${DOCKER_HUB_USER:-}" && -n "${DOCKER_HUB_PASSWORD:-}" ]]; then
  echo "~~~ :warning: Deprecated DOCKER_HUB_* env variables"
  echo "The following env hook environments variables need updating:"
  echo "* DOCKER_HUB_USER is now DOCKER_LOGIN_USER"
  echo "* DOCKER_HUB_PASSWORD is now DOCKER_LOGIN_PASSWORD"
  DOCKER_LOGIN_USER="${DOCKER_HUB_USER}"
  DOCKER_LOGIN_PASSWORD="${DOCKER_HUB_PASSWORD}"
fi

# Generic docker login support

if [[ -n "${DOCKER_LOGIN_USER:-}" && -n "${DOCKER_LOGIN_PASSWORD:-}" ]] ; then
  echo "~~~ Authenticating with Docker server"

  if [[ -n "${DOCKER_LOGIN_SERVER:-}" ]] ; then
    docker login --username="${DOCKER_LOGIN_USER}" --password="${DOCKER_LOGIN_PASSWORD}" "${DOCKER_LOGIN_SERVER}"
  else
    docker login --username="${DOCKER_LOGIN_USER}" --password="${DOCKER_LOGIN_PASSWORD}"
  fi

  unset DOCKER_LOGIN_USER
  unset DOCKER_LOGIN_PASSWORD
  unset DOCKER_LOGIN_SERVER
fi


# Docker compose layer caching

if [[ -n "${BUILDKITE_DOCKER_COMPOSE_CONTAINER:-}" ]] ; then
    echo "~~~ Fetching cached docker images"

    (
        # unset any aws keys so we use the machine policy
        unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_REGION

        # see if we are missing any of the images locally, and load them if we are
        images_file=s3://$BUILDKITE_IMAGE_CACHE_BUCKET/$BUILDKITE_PIPELINE_SLUG.images
        if aws s3 ls $images_file && ! docker inspect $(aws s3 cp $images_file -) > /dev/null ; then
            aws s3 cp s3://$BUILDKITE_IMAGE_CACHE_BUCKET/$BUILDKITE_PIPELINE_SLUG.tar.gz - | gunzip -c | docker load
        fi
    )
fi
