AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  CreateMetricsStack:
    Condition: UseAutoscaling
  CreateSecretsBucket:
    Fn::Equals:
      - Ref: SecretsBucket
      - ''
  CreateSecurityGroup:
    Fn::Equals:
      - Ref: SecurityGroupId
      - ''
  CreateVpcResources:
    Fn::Equals:
      - Ref: VpcId
      - ''
  EnableSshIngress:
    Fn::And:
      - Condition: CreateSecurityGroup
      - Fn::Or:
          - Condition: HasKeyName
          - Fn::Not:
              - Fn::Equals:
                  - Ref: AuthorizedUsersUrl
                  - ''
  HasKeyName:
    Fn::Not:
      - Fn::Equals:
          - Ref: KeyName
          - ''
  HasManagedPolicies:
    Fn::Or:
      - Condition: UseManagedPolicyARN
      - Condition: UseECR
  HasOrgSlug:
    Fn::Not:
      - Fn::Equals:
          - Ref: BuildkiteOrgSlug
          - ''
  SetInstanceRoleName:
    Fn::Not:
      - Fn::Equals:
          - Ref: InstanceRoleName
          - ''
  UseArtifactsBucket:
    Fn::Not:
      - Fn::Equals:
          - Ref: ArtifactsBucket
          - ''
  UseAutoscaling:
    Fn::Not:
      - Fn::Equals:
          - Ref: MaxSize
          - Ref: MinSize
  UseCostAllocationTags:
    Fn::Equals:
      - Ref: EnableCostAllocationTags
      - 'true'
  UseDefaultAMI:
    Fn::Equals:
      - Ref: ImageId
      - ''
  UseECR:
    Fn::Not:
      - Fn::Equals:
          - Ref: ECRAccessPolicy
          - none
  UseManagedPolicyARN:
    Fn::Not:
      - Fn::Equals:
          - Fn::Join:
              - ''
              - Ref: ManagedPolicyARN
          - ''
  UseSpecifiedAvailabilityZones:
    Fn::Not:
      - Fn::Equals:
          - Fn::Join:
              - ''
              - Ref: AvailabilityZones
          - ''
  UseSpecifiedSecretsBucket:
    Fn::Not:
      - Fn::Equals:
          - Ref: SecretsBucket
          - ''
  UseSpotInstances:
    Fn::Not:
      - Fn::Equals:
          - Ref: SpotPrice
          - 0
Parameters:
  AgentsPerInstance:
    Description: Number of Buildkite agents to run on each instance
    Type: Number
    Default: 1
    MinValue: 1
  ArtifactsBucket:
    Description: Optional - Name of an existing S3 bucket for build artifact storage
    Type: String
    Default: ''
  AssociatePublicIpAddress:
    Type: String
    Description: Associate instances with public IP addresses
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  AuthorizedUsersUrl:
    Description: Optional - HTTPS or S3 URL to periodically download ssh authorized_keys
      from, setting this will enable SSH ingress
    Type: String
    Default: ''
  AvailabilityZones:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of AZs that subnets are created in
      (if Subnets parameter is not specified)
    Default: ''
  BootstrapScriptUrl:
    Description: Optional - HTTPS or S3 URL to run on each instance during boot
    Type: String
    Default: ''
  BuildkiteAgentExperiments:
    Description: Agent experiments to enable, comma delimited. See https://github.com/buildkite/agent/blob/master/EXPERIMENTS.md.
    Type: String
    Default: ''
  BuildkiteAgentRelease:
    Type: String
    AllowedValues:
      - stable
      - beta
      - edge
    Default: stable
  BuildkiteAgentTags:
    Description: Additional tags seperated by commas to provide to the agent. E.g
      os=linux,llamas=always
    Type: String
    Default: ''
  BuildkiteAgentTimestampLines:
    Description: Set to true to prepend timestamps to every line of output
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  BuildkiteAgentToken:
    Description: Buildkite agent registration token
    Type: String
    NoEcho: true
    MinLength: 1
  BuildkiteOrgSlug:
    Description: Optional Buildkite organization slug (e.g. "my-org"). This only needs
      to be set when running stacks for different Buildkite organisations in a single
      AWS account.
    Type: String
    Default: ''
  BuildkiteQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using
      "queue={value}"
    Type: String
    Default: default
    MinLength: 1
  CostAllocationTagName:
    Type: String
    Description: The name of the Cost Allocation Tag used for billing purposes
    Default: aws:createdBy
  CostAllocationTagValue:
    Type: String
    Description: The value of the Cost Allocation Tag used for billing purposes
    Default: buildkite-elastic-ci-stack-for-aws
  ECRAccessPolicy:
    Type: String
    Description: ECR access policy to give container instances
    AllowedValues:
      - none
      - readonly
      - poweruser
      - full
    Default: none
  EnableCostAllocationTags:
    Type: String
    Description: Enables AWS Cost Allocation tags for all resources in the stack.
      See https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableDockerExperimental:
    Type: String
    Description: Enables Docker experimental features
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableDockerLoginPlugin:
    Type: String
    Description: Enables docker-login plugin for all pipelines
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  EnableDockerUserNamespaceRemap:
    Type: String
    Description: Enables Docker user namespace remapping so docker runs as buildkite-agent
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  EnableECRPlugin:
    Type: String
    Description: Enables ecr plugin for all pipelines
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  EnableSecretsPlugin:
    Type: String
    Description: Enables s3-secrets plugin for all pipelines
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  ImageId:
    Type: String
    Description: Optional - Custom AMI to use for instances (must be based on the
      stack's AMI)
    Default: ''
  InstanceCreationTimeout:
    Description: Timeout period for Autoscaling Group Creation Policy
    Type: String
    Default: PT5M
  InstanceRoleName:
    Type: String
    Description: Optional - A name for the IAM Role attached to the Instance Profile
    Default: ''
  InstanceType:
    Description: Instance type
    Type: String
    Default: t2.nano
    MinLength: 1
  KeyName:
    Description: Optional - SSH keypair used to access the buildkite instances, setting
      this will enable SSH ingress
    Type: String
    Default: ''
  ManagedPolicyARN:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of managed IAM policy ARNs to attach
      to the instance role
    Default: ''
  MaxSize:
    Description: Maximum number of instances
    Type: Number
    Default: 10
    MinValue: 1
  MinSize:
    Description: Minimum number of instances
    Type: Number
    Default: 0
  RootVolumeSize:
    Description: Size of each instance's root EBS volume (in GB)
    Type: Number
    Default: 250
    MinValue: 10
  ScaleCooldownPeriod:
    Description: Minimum number of seconds to wait between scaling events. Must be
      greater than the time needed for an instance to boot.
    Type: Number
    Default: 300
    MinValue: 10
  ScaleDownAdjustment:
    Description: Number of instances to remove on scale down events (UnfinishedJobs
      == 0 for ScaleDownPeriod)
    Type: Number
    Default: -1
    MaxValue: 0
  ScaleDownPeriod:
    Description: Number of seconds UnfinishedJobs must equal 0 before scale down
    Type: Number
    Default: 1800
  ScaleUpAdjustment:
    Description: Number of instances to add on scale up events (ScheduledJobsCount
      > 0 for 1 min)
    Type: Number
    Default: 5
    MinValue: 0
  SecretsBucket:
    Description: Optional - Name of an existing S3 bucket containing pipeline secrets
      (Created if left blank)
    Type: String
    Default: ''
  SecurityGroupId:
    Type: String
    Description: Optional - Security group id to assign to instances
    Default: ''
  SpotPrice:
    Description: Spot bid price to use for the instances. 0 means normal (non-spot)
      instances
    Type: String
    Default: 0
  Subnets:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of two existing VPC subnet ids where
      EC2 instances will run. Required if setting VpcId.
    Default: ''
  VpcId:
    Type: String
    Description: Optional - Id of an existing VPC to launch instances into. Leave
      blank to have a new VPC created
    Default: ''
Resources:
  AgentAutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        Fn::If:
          - CreateVpcResources
          - - Ref: Subnet0
            - Ref: Subnet1
          - Ref: Subnets
      LaunchConfigurationName:
        Ref: AgentLaunchConfiguration
      MinSize:
        Ref: MinSize
      MaxSize:
        Ref: MaxSize
      MetricsCollection:
        - Granularity: 1Minute
          Metrics:
            - GroupMinSize
            - GroupMaxSize
            - GroupInServiceInstances
            - GroupTerminatingInstances
            - GroupPendingInstances
      TerminationPolicies:
        - OldestLaunchConfiguration
        - ClosestToNextInstanceHour
      Tags:
        - Key: Role
          Value: buildkite-agent
          PropagateAtLaunch: true
        - Key: Name
          Value: buildkite-agent
          PropagateAtLaunch: true
        - Key: BuildkiteAgentRelease
          Value:
            Ref: BuildkiteAgentRelease
          PropagateAtLaunch: true
        - Key: BuildkiteOrgSlug
          Value:
            Ref: BuildkiteOrgSlug
          PropagateAtLaunch: true
        - Key: BuildkiteQueue
          Value:
            Ref: BuildkiteQueue
          PropagateAtLaunch: true
        - Fn::If:
            - UseCostAllocationTags
            - Key:
                Ref: CostAllocationTagName
              Value:
                Ref: CostAllocationTagValue
              PropagateAtLaunch: true
            - Ref: AWS::NoValue
    CreationPolicy:
      ResourceSignal:
        Timeout:
          Ref: InstanceCreationTimeout
        Count:
          Ref: MinSize
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
  AgentLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress:
        Ref: AssociatePublicIpAddress
      SecurityGroups:
        - Fn::If:
            - CreateSecurityGroup
            - Ref: SecurityGroup
            - Ref: SecurityGroupId
      KeyName:
        Fn::If:
          - HasKeyName
          - Ref: KeyName
          - Ref: AWS::NoValue
      IamInstanceProfile:
        Ref: IAMInstanceProfile
      InstanceType:
        Ref: InstanceType
      SpotPrice:
        Fn::If:
          - UseSpotInstances
          - Ref: SpotPrice
          - Ref: AWS::NoValue
      ImageId:
        Fn::If:
          - UseDefaultAMI
          - Fn::FindInMap:
              - AWSRegion2AMI
              - Ref: AWS::Region
              - AMI
          - Ref: ImageId
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize:
              Ref: RootVolumeSize
            VolumeType: gp2
      UserData:
        Fn::Base64:
          Fn::Sub:
            - "Content-Type: multipart/mixed; boundary=\"==BOUNDARY==\"\nMIME-Version:\
              \ 1.0\n--==BOUNDARY==\nContent-Type: text/cloud-boothook; charset=\"\
              us-ascii\"\nDOCKER_USERNS_REMAP=${EnableDockerUserNamespaceRemap} \\\
              \nDOCKER_EXPERIMENTAL=${EnableDockerExperimental} \\\n  /usr/local/bin/bk-configure-docker.sh\n\
              \n--==BOUNDARY==\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\
              \n#!/bin/bash -xv\nBUILDKITE_STACK_NAME=\"${AWS::StackName}\" \\\nBUILDKITE_STACK_VERSION=%v\
              \ \\\nBUILDKITE_SECRETS_BUCKET=\"${LocalSecretsBucket}\" \\\nBUILDKITE_AGENT_TOKEN=\"\
              ${BuildkiteAgentToken}\" \\\nBUILDKITE_AGENTS_PER_INSTANCE=\"${AgentsPerInstance}\"\
              \ \\\nBUILDKITE_AGENT_TAGS=\"${BuildkiteAgentTags}\" \\\nBUILDKITE_AGENT_TIMESTAMP_LINES=\"\
              ${BuildkiteAgentTimestampLines}\" \\\nBUILDKITE_AGENT_EXPERIMENTS=\"\
              ${BuildkiteAgentExperiments}\" \\\nBUILDKITE_AGENT_RELEASE=\"${BuildkiteAgentRelease}\"\
              \ \\\nBUILDKITE_QUEUE=\"${BuildkiteQueue}\" \\\nBUILDKITE_ORG_SLUG=\"\
              ${BuildkiteOrgSlug}\" \\\nBUILDKITE_ELASTIC_BOOTSTRAP_SCRIPT=\"${BootstrapScriptUrl}\"\
              \ \\\nBUILDKITE_AUTHORIZED_USERS_URL=\"${AuthorizedUsersUrl}\" \\\n\
              BUILDKITE_ECR_POLICY=${ECRAccessPolicy} \\\nBUILDKITE_LIFECYCLE_TOPIC=${AgentLifecycleTopic}\
              \ \\\nAWS_DEFAULT_REGION=${AWS::Region} \\\nSECRETS_PLUGIN_ENABLED=${EnableSecretsPlugin}\
              \ \\\nECR_PLUGIN_ENABLED=${EnableECRPlugin} \\\nDOCKER_LOGIN_PLUGIN_ENABLED=${EnableDockerLoginPlugin}\
              \ \\\nAWS_REGION=${AWS::Region} \\\n  /usr/local/bin/bk-install-elastic-stack.sh\n\
              --==BOUNDARY==--\n"
            - LocalSecretsBucket:
                Fn::If:
                  - CreateSecretsBucket
                  - Ref: ManagedSecretsBucket
                  - Ref: SecretsBucket
  AgentLifecycleHook:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      AutoScalingGroupName:
        Ref: AgentAutoScaleGroup
      LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
      DefaultResult: CONTINUE
      HeartbeatTimeout: 120
      NotificationTargetARN:
        Ref: AgentLifecycleTopic
      RoleARN:
        Fn::GetAtt:
          - AgentLifecycleHookRole
          - Arn
  AgentLifecycleHookRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AgentLifecyclePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  Ref: AgentLifecycleTopic
      Path: /
  AgentLifecycleTopic:
    Type: AWS::SNS::Topic
  AgentScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Condition: UseAutoscaling
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: AgentAutoScaleGroup
      Cooldown:
        Ref: ScaleCooldownPeriod
      ScalingAdjustment:
        Ref: ScaleDownAdjustment
  AgentScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Condition: UseAutoscaling
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: AgentAutoScaleGroup
      Cooldown:
        Ref: ScaleCooldownPeriod
      ScalingAdjustment:
        Ref: ScaleUpAdjustment
  AgentUtilizationAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Condition: UseAutoscaling
    Properties:
      AlarmDescription: Scale-up if ScheduledJobs > 0 for 1 minute
      MetricName: ScheduledJobsCount
      Namespace: Buildkite
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 0
      AlarmActions:
        - Ref: AgentScaleUpPolicy
      Dimensions:
        Fn::If:
          - HasOrgSlug
          - - Name: Queue
              Value:
                Ref: BuildkiteQueue
            - Name: Org
              Value:
                Fn::If:
                  - HasOrgSlug
                  - Ref: BuildkiteOrgSlug
                  - ''
          - - Name: Queue
              Value:
                Ref: BuildkiteQueue
      ComparisonOperator: GreaterThanThreshold
  AgentUtilizationAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Condition: UseAutoscaling
    Properties:
      AlarmDescription: Scale-down if UnfinishedJobs == 0 for N minutes
      MetricName: UnfinishedJobsCount
      Namespace: Buildkite
      Statistic: Maximum
      Period:
        Ref: ScaleDownPeriod
      EvaluationPeriods: 1
      Threshold: 0
      AlarmActions:
        - Ref: AgentScaleDownPolicy
      Dimensions:
        Fn::If:
          - HasOrgSlug
          - - Name: Queue
              Value:
                Ref: BuildkiteQueue
            - Name: Org
              Value:
                Fn::If:
                  - HasOrgSlug
                  - Ref: BuildkiteOrgSlug
                  - ''
          - - Name: Queue
              Value:
                Ref: BuildkiteQueue
      ComparisonOperator: LessThanOrEqualToThreshold
  ArtifactsBucketPolicies:
    Type: AWS::IAM::Policy
    Condition: UseArtifactsBucket
    Properties:
      PolicyName: ArtifactsBucketPolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:Put*
              - s3:List*
              - s3:Get*
            Resource:
              - Fn::Sub: arn:aws:s3:::${ArtifactsBucket}/*
              - Fn::Sub: arn:aws:s3:::${ArtifactsBucket}
      Roles:
        - Ref: IAMRole
  BuildkiteMetricsFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - LambdaExecutionPolicy
    Condition: CreateMetricsStack
    Properties:
      Code:
        S3Bucket:
          Fn::FindInMap:
            - MetricsLambdaBucket
            - Ref: AWS::Region
            - Bucket
        S3Key: buildkite-agent-metrics/v4.1.2/handler.zip
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Timeout: 120
      Handler: handler
      Runtime: go1.x
      MemorySize: 128
      Environment:
        Variables:
          BUILDKITE_AGENT_TOKEN:
            Ref: BuildkiteAgentToken
          BUILDKITE_QUEUE:
            Ref: BuildkiteQueue
          AWS_STACK_ID:
            Ref: AWS::StackId
          AWS_STACK_NAME:
            Ref: AWS::StackName
          AWS_ACCOUNT_ID:
            Ref: AWS::AccountId
  Gateway:
    Type: AWS::EC2::InternetGateway
    Condition: CreateVpcResources
    Properties:
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Condition: CreateVpcResources
    Properties:
      InternetGatewayId:
        Ref: Gateway
      VpcId:
        Ref: Vpc
  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: IAMRole
  IAMPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InstancePolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - cloudformation:DescribeStackResource
              - ec2:DescribeTags
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:RecordLifecycleActionHeartbeat
              - autoscaling:CompleteLifecycleAction
              - autoscaling:SetInstanceHealth
            Resource: '*'
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Resource: '*'
          - Effect: Allow
            Action:
              - sqs:*
              - sns:Unsubscribe
              - sns:Subscribe
            Resource: '*'
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: '*'
      Roles:
        - Ref: IAMRole
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::If:
          - SetInstanceRoleName
          - Ref: InstanceRoleName
          - Fn::Sub: ${AWS::StackName}-Role
      ManagedPolicyArns:
        Fn::If:
          - HasManagedPolicies
          - Fn::Split:
              - ','
              - Fn::Join:
                  - ','
                  - - Fn::If:
                        - UseECR
                        - Fn::FindInMap:
                            - ECRManagedPolicy
                            - Ref: ECRAccessPolicy
                            - Policy
                        - Ref: AWS::NoValue
                    - Fn::If:
                        - UseManagedPolicyARN
                        - Fn::Join:
                            - ','
                            - Ref: ManagedPolicyARN
                        - Ref: AWS::NoValue
          - Ref: AWS::NoValue
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - autoscaling.amazonaws.com
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
  LambdaExecutionPolicy:
    Type: AWS::IAM::Policy
    Condition: CreateMetricsStack
    Properties:
      PolicyName: AccessToCloudwatchForBuildkiteMetrics
      Roles:
        - Ref: LambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - cloudwatch:PutMetricData
            Resource:
              - '*'
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Condition: CreateMetricsStack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  ManagedSecretsBucket:
    Type: AWS::S3::Bucket
    Condition: CreateSecretsBucket
    DeletionPolicy: Retain
    Properties:
      LoggingConfiguration:
        DestinationBucketName:
          Ref: ManagedSecretsLoggingBucket
      VersioningConfiguration:
        Status: Enabled
  ManagedSecretsBucketPolicy:
    Type: AWS::IAM::Policy
    Condition: CreateSecretsBucket
    Properties:
      PolicyName: SecretsBucketPolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:Get
              - s3:List*
            Resource:
              - Fn::Sub: arn:aws:s3:::${ManagedSecretsBucket}/*
              - Fn::Sub: arn:aws:s3:::${ManagedSecretsBucket}
      Roles:
        - Ref: IAMRole
  ManagedSecretsLoggingBucket:
    Type: AWS::S3::Bucket
    Condition: CreateSecretsBucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Condition: CreateMetricsStack
    Properties:
      FunctionName:
        Ref: BuildkiteMetricsFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - ScheduledRule
          - Arn
  RouteDefault:
    Type: AWS::EC2::Route
    Condition: CreateVpcResources
    DependsOn: GatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: Gateway
      RouteTableId:
        Ref: Routes
  Routes:
    Type: AWS::EC2::RouteTable
    Condition: CreateVpcResources
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
  ScheduledRule:
    Type: AWS::Events::Rule
    Condition: CreateMetricsStack
    Properties:
      Description: ScheduledRule
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - BuildkiteMetricsFunction
              - Arn
          Id: TargetBuildkiteMetricsFunction
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateSecurityGroup
    Properties:
      GroupDescription: Enable access to agents
      VpcId:
        Fn::If:
          - CreateVpcResources
          - Ref: Vpc
          - Ref: VpcId
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
  SecurityGroupSshIngress:
    Condition: EnableSshIngress
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Fn::GetAtt:
          - SecurityGroup
          - GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  Subnet0:
    Type: AWS::EC2::Subnet
    Condition: CreateVpcResources
    Properties:
      AvailabilityZone:
        Fn::If:
          - UseSpecifiedAvailabilityZones
          - Fn::Select:
              - 0
              - Ref: AvailabilityZones
          - Fn::Select:
              - 0
              - Fn::GetAZs: ''
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
  Subnet0Routes:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateVpcResources
    Properties:
      SubnetId:
        Ref: Subnet0
      RouteTableId:
        Ref: Routes
  Subnet1:
    Type: AWS::EC2::Subnet
    Condition: CreateVpcResources
    Properties:
      AvailabilityZone:
        Fn::If:
          - UseSpecifiedAvailabilityZones
          - Fn::Select:
              - 1
              - Ref: AvailabilityZones
          - Fn::Select:
              - 1
              - Fn::GetAZs: ''
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
  Subnet1Routes:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateVpcResources
    Properties:
      SubnetId:
        Ref: Subnet1
      RouteTableId:
        Ref: Routes
  UnmanagedSecretsBucketPolicy:
    Type: AWS::IAM::Policy
    Condition: UseSpecifiedSecretsBucket
    Properties:
      PolicyName: SecretsBucketPolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:Get
              - s3:List*
            Resource:
              - Fn::Sub: arn:aws:s3:::${SecretsBucket}/*
              - Fn::Sub: arn:aws:s3:::${SecretsBucket}
      Roles:
        - Ref: IAMRole
  Vpc:
    Type: AWS::EC2::VPC
    Condition: CreateVpcResources
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
Outputs:
  AgentLifecycleTopic:
    Value:
      Ref: AgentLifecycleTopic
  AutoScalingGroupName:
    Value:
      Ref: AgentAutoScaleGroup
  InstanceRoleName:
    Value:
      Ref: IAMRole
  ManagedSecretsBucket:
    Value:
      Fn::If:
        - CreateSecretsBucket
        - Ref: ManagedSecretsBucket
        - ''
  ManagedSecretsLoggingBucket:
    Value:
      Fn::If:
        - CreateSecretsBucket
        - Ref: ManagedSecretsLoggingBucket
        - ''
Mappings:
  AWSRegion2AMI:
    ap-southeast-2:
      AMI: we use a custom AMI
  ECRManagedPolicy:
    none:
      Policy: ''
    readonly:
      Policy: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    poweruser:
      Policy: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
    full:
      Policy: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
  MetricsLambdaBucket:
    us-east-1:
      Bucket: buildkite-lambdas
    us-east-2:
      Bucket: buildkite-lambdas-us-east-2
    us-west-1:
      Bucket: buildkite-lambdas-us-west-1
    us-west-2:
      Bucket: buildkite-lambdas-us-west-2
    eu-west-1:
      Bucket: buildkite-lambdas-eu-west-1
    eu-west-2:
      Bucket: buildkite-lambdas-eu-west-2
    eu-central-1:
      Bucket: buildkite-lambdas-eu-central-1
    ap-northeast-1:
      Bucket: buildkite-lambdas-ap-northeast-1
    ap-northeast-2:
      Bucket: buildkite-lambdas-ap-northeast-2
    ap-southeast-1:
      Bucket: buildkite-lambdas-ap-southeast-1
    ap-southeast-2:
      Bucket: buildkite-lambdas-ap-southeast-2
    ap-south-1:
      Bucket: buildkite-lambdas-ap-south-1
    sa-east-1:
      Bucket: buildkite-lambdas-sa-east-1
